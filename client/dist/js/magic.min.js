/*
 test 2017-02-25 
*/
!function(){"use strict";var a=angular.module("VideoApp",["ui.router","angular-md5","angular-loading-bar"]);a.config(["$locationProvider","$stateProvider","$urlRouterProvider","cfpLoadingBarProvider",function(a,b,c,d){d.includeSpinner=!1,a.html5Mode({enabled:!0,requireBase:!1});var e,f=["$q","LoginService",function(a,b){return e=b.getUserInfo(),e?a.when(e):a.reject({authenticated:!1})}];b.state("/",{url:"/login",templateUrl:"/components/login/LoginView.html"}).state("/dashboard",{url:"/dashboard?sessionId",templateUrl:"/components/dashboard/DashboardView.html",controller:"DashboardController as dashboardCtrl",resolve:{loginRequired:f}}).state("/videoview",{url:"/videoview?videoId?sessionId",controller:"VideoController",views:{video:{templateUrl:"/components/video/VideoView.html",resolve:{loginRequired:f}}}}),c.otherwise("/login")}]),a.run(["$rootScope","$location","$window",function(a,b){a.$on("$routeChangeSuccess",function(a){}),a.$on("$routeChangeError",function(a,c,d,e){e.authenticated===!1&&b.path("/login")})}])}(),function(){angular.module("VideoApp").controller("DashboardController",["$window","$rootScope","$scope","$state","$stateParams","$location","DashboardService","VideoService",function(a,b,c,d,e,f,g,h){c.videos=[],c.username=JSON.parse(a.sessionStorage.userInfo).username,c.sessionId=JSON.parse(a.sessionStorage.userInfo).sessionId,c.loadMore=function(){h.getVideos(e.sessionId).success(function(a){c.videos=a,console.log(a)}).error(function(a){c.error=a})},c.loadMore(),this.getSingleVideo=function(a){a.target.id;d.go("/videoview",{videoId:a.target.id,sessionId:e.sessionId})},c.getRatings=function(a,b){g.getVideoRatings().success(function(a){c.ratings=a}).error(function(){console.log(status)})}}])}(),angular.module("VideoApp").factory("DashboardService",["$rootScope","$http","$window","$routeParams","$stateParams",function(a,b,c,d,e){return console.log(e.sessionId),{getVideos:function(){return b({url:"/videos",method:"GET",params:{sessionId:e.sessionId}})},getVideo:function(a){return b({url:"/video",method:"GET",params:{sessionId:e.sessionId,videoId:a}})},getVideoRatings:function(){return b({url:"/video/ratings",method:"POST",params:{sessionId:e.sessionId}})}}}]),function(){"use strict";angular.module("VideoApp").filter("webm",["$log",function(a){return function(a){if("undefined"!==a||null!==a){console.log(a);var b=a.split(".mp4");return b[0]+".webm"}throw new Error("VideoTypeFilter.js : input null or undefined ")}}])}(),angular.module("VideoApp").factory("AuthService",function(){var a={isLogged:!1};return a}),function(){angular.module("VideoApp").controller("LoginController",["$rootScope","$scope","$location","$state","$window","LoginService","AuthService","md5",function(a,b,c,d,e,f,g,h){b.login=function(a,c){void 0!==a&&void 0!==c?(c=h.createHash(c||""),f.logIn(a,c).then(function(a){a.sessionId?d.go("/dashboard",{sessionId:a.sessionId}):alert("Username/Password combination is incorrect")},function(a){b.loginError=a})):alert("Please Enter the Username/password")},b.logout=function(){f.logOut(),d.go("/")}}])}(),angular.module("VideoApp").factory("LoginService",["$http","$window","$q","$location",function(a,b,c,d){function e(){b.sessionStorage.userInfo&&(f=JSON.parse(b.sessionStorage.userInfo))}var f;return e(),{getUserInfo:function(){return f},logIn:function(d,e){var d,g=c.defer();return a.post("/user/auth",{username:d,password:e}).then(function(a){f={sessionId:a.data.sessionId,username:a.data.username},b.sessionStorage.userInfo=JSON.stringify(f),g.resolve(f)},function(a){console.log("loginService error",a),g.reject(a)}),g.promise},logOut:function(){var d=c.defer();return a({url:"/user/logout",method:"GET",params:{sessionId:f.sessionId}}).then(function(a){b.sessionStorage.userInfo=null,f=null,d.resolve(a)},function(a){d.reject(a)}),d.promise}}}]),angular.module("VideoApp").directive("starRating",function(){return{restrict:"A",template:'<ul class="rating">\t<li ng-repeat="star in stars" ng-class="star" ng-click="toggle($index)">â˜…</li></ul>',scope:{ratingValue:"=",max:"=",onRatingSelected:"&"},link:function(a,b,c){var d=function(){a.stars=[];for(var b=0;b<a.max;b++)a.stars.push({filled:b<a.ratingValue})};a.toggle=function(b){a.ratingValue=b+1,a.onRatingSelected({rating:b+1})},a.$watch("ratingValue",function(a,b){b&&d()})}}}),angular.module("VideoApp").controller("VideoController",["$window","$rootScope","$scope","VideoService","$routeParams","$stateParams","$state",function(a,b,c,d,e,f,g){var h=b.videoId,i=JSON.parse(a.sessionStorage.userInfo).sessionId;JSON.parse(a.sessionStorage.userInfo).username;c.rating=5,console.log("in video controller"),c.rateFunction=function(a){d.rateViedo(i,h,a).success(function(a){}).error(function(){console.log(status)})},c.getSingle=function(){console.log("calling getSingle"),d.getSingleVideo(f.sessionId,f.videoId).success(function(a){console.log(a),c.single_video=a.data,console.log(c.single_video),g.go("/videoview",{videoId:f.videoId,sessionId:f.sessionId})}).error(function(a){c.error=a,console.log(status)})},c.getSingle()}]),angular.module("VideoApp").service("VideoService",["$window","$http",function(a,b){JSON.parse(a.sessionStorage.userInfo).sessionId;return{getSingleVideo:function(a,c){return b({url:"/video",method:"GET",params:{sessionId:a,videoId:c}})},getVideos:function(a){return b({url:"/videos",method:"GET",params:{sessionId:a}})},rateViedo:function(a,c,d){return b.post("/video/ratings?sessionId="+a,{videoId:c,rating:d})}}}]);